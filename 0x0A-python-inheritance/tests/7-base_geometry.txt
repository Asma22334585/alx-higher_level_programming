Import function from module:
    >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

Test no area:
	 >>> x = BaseGeometry()
	 >>> x.area()
	 Traceback (most recent call last):
	 ...
	 Exception: area() is not implemented

Test no arguments to integer_validator:
	 >>> x.integer_validator()
	 Traceback (most recent call last):
         ...
	 TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

Test only 1 argument to integer_validator:
	 >>> x.integer_validator("integer")
	 Traceback (most recent call last):
         ...
	 TypeError: integer_validator() missing 1 required positional argument: 'value'

Test for float types:
	 >>> x.integer_validator("float", 5.6)
	 Traceback (most recent call last):
         ...
         TypeError: float must be an integer

Test negative integer:
	 >>> x.integer_validator("integer", -230)
	 Traceback (most recent call last):
         ...
         ValueError: integer must be greater than 0

Test 0:
	 >>> x.integer_validator("integer", 0)
	 Traceback (most recent call last):
         ...
         ValueError: integer must be greater than 0

Test string value:
    >>> x.integer_validator("string", "Asma")
    Traceback (most recent call last):
    TypeError: string must be an integer

Test int:
	 >>> x.integer_validator("integer", 1)

