Import module:
    >>> matrix_mul = __import__('100-matrix_mul').matrix_mul

Test empty matrix 1:
    >>> matrix_mul([], [[3]])
    Traceback (most recent call last):
    ...
    ValueError: m_a can't be empty

Test empty matrix 2:
    >>> matrix_mul([[4]], [])
    Traceback (most recent call last):
    ...
    ValueError: m_b can't be empty

Test notnumbr 1:
    >>> matrix_mul([["Asma"]], [[9, 42, 16]])
    Traceback (most recent call last):
    ...
    TypeError: m_a should contain only integers or floats

Test notnumbr 2 :
    >>> matrix_mul([[9, 42, 16]], [["Gueesmi"]])
    Traceback (most recent call last):
    ...
    TypeError: m_b should contain only integers or floats

Test not same rows 1:
    >>> matrix_mul([[6, 25, 1], [7, 4, 2], [5, 4]], [[3, 4, 2], [7, 19, 2]])
    Traceback (most recent call last):
    ...
    TypeError: each row of m_a must should be of the same size

Test not same rows 2:
    >>> matrix_mul([[4, 7, 2], [3, 14, 3]], [[2, 3, 7], [8, 1], [3, 1]])
    Traceback (most recent call last):
    ...
    TypeError: each row of m_b must should be of the same size

Test list 1:
    >>> matrix_mul([5, 2], [[9, 5]])
    Traceback (most recent call last):
    ...
    TypeError: m_a must be a list of lists

Test list 2:
    >>> matrix_mul([[6, 2, 6]], [9, 1, 6])
    Traceback (most recent call last):
    ...
    TypeError: m_b must be a list of lists

Test:
    >>> matrix_mul([[2]], [[4]])
    [[8]]

Test  canâ€™t be multiplied:
    >>> matrix_mul([[19, 5, 6], [56, 3, 36]], [[4, 3], [44, 39]])
    Traceback (most recent call last):
    ...
    ValueError: m_a and m_b can't be multiplied
