Import module:
    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Test matrix:
    >>> matrix_divided([[3, 9, 12], [9, 6, 3]], 3)
    [[1.0, 3.0, 4.0], [3.0, 2.0, 1.0]]

Test division by negative:
    >>> matrix_divided([[2, 4, 8], [8, 2, 4]], -2)
    [[-1.0, -2.0, -4.0], [-4.0, -1.0, -2.0]]

Test division by nan:
    >>> matrix_divided([[2, 3, 10], [6, 5, 1]], float('nan'))
    [[nan, nan, nan], [nan, nan, nan]]

Test matrix with non number
    >>> matrix_divided([[2, 8, 9], [6, "asma", 2]], 2)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Test matrix with different rows
    >>> matrix_divided([[2, 4, 86, 14], [1, 89, 5]], 2)
    Traceback (most recent call last):
    ...
    TypeError: Each row of the matrix must have the same size

Test list:
    >>> matrix_divided([], 5)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Test division by zero:
    >>> matrix_divided([[2, 7, 2], [6, 54, 2]], 0)
    Traceback (most recent call last):
    ...
    ZeroDivisionError: division by zero

Test division string:
    >>> matrix_divided([[3, 2]], "Asma")
    Traceback (most recent call last):
    ...
    TypeError: div must be a number

Test without arg:
    >>> matrix_divided()
    Traceback (most recent call last):
    ...
    TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
